% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/job_id.R
\docType{class}
\name{JobId}
\alias{JobId}
\title{JobId}
\format{
An \code{R6Class} generator object
}
\description{
Identifier created by the SIRIUS Nightsky API for a newly created Job.  Object can be enriched with Job status/progress information ({@link JobProgress JobProgress}) and/or Job command information.

JobId Class
}
\details{
Create a new JobId
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{Unique identifier to access the job via the API character [optional]}

\item{\code{command}}{Command string of the executed Task character [optional]}

\item{\code{progress}}{\link{JobProgress} [optional]}

\item{\code{affectedCompoundIds}}{List of compound ids that are affected by this job.  If this job is creating compounds (e.g. data import jobs) this value will be NULL until the jobs has finished list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-JobId-new}{\code{JobId$new()}}
\item \href{#method-JobId-toJSON}{\code{JobId$toJSON()}}
\item \href{#method-JobId-fromJSON}{\code{JobId$fromJSON()}}
\item \href{#method-JobId-toJSONString}{\code{JobId$toJSONString()}}
\item \href{#method-JobId-fromJSONString}{\code{JobId$fromJSONString()}}
\item \href{#method-JobId-validateJSON}{\code{JobId$validateJSON()}}
\item \href{#method-JobId-toString}{\code{JobId$toString()}}
\item \href{#method-JobId-isValid}{\code{JobId$isValid()}}
\item \href{#method-JobId-getInvalidFields}{\code{JobId$getInvalidFields()}}
\item \href{#method-JobId-print}{\code{JobId$print()}}
\item \href{#method-JobId-clone}{\code{JobId$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-new"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new JobId class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$new(
  id = NULL,
  command = NULL,
  progress = NULL,
  affectedCompoundIds = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Unique identifier to access the job via the API}

\item{\code{command}}{Command string of the executed Task}

\item{\code{progress}}{progress}

\item{\code{affectedCompoundIds}}{List of compound ids that are affected by this job.  If this job is creating compounds (e.g. data import jobs) this value will be NULL until the jobs has finished}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
JobId in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of JobId
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of JobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
JobId in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of JobId
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of JobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to JobId and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-toString"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of JobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-print"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobId-clone"></a>}}
\if{latex}{\out{\hypertarget{method-JobId-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobId$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
