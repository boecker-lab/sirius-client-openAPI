% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formula_result_container.R
\docType{class}
\name{FormulaResultContainer}
\alias{FormulaResultContainer}
\title{FormulaResultContainer}
\format{
An \code{R6Class} generator object
}
\description{
Container for formula level results that holds a unique identifier (molecular formula + adduct).  It can be extended/annotated with a list of results that are available for this formula candidate and their scores.  It can further be extended/annotated with the action formula candidate results.

FormulaResultContainer Class
}
\details{
Create a new FormulaResultContainer
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{Unique identifier of this formula candidate character [optional]}

\item{\code{molecularFormula}}{molecular formula of this formula candidate character [optional]}

\item{\code{adduct}}{Adduct of this formula candidate character [optional]}

\item{\code{resultOverview}}{\link{ResultOverview} [optional]}

\item{\code{candidate}}{\link{FormulaCandidate} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FormulaResultContainer-new}{\code{FormulaResultContainer$new()}}
\item \href{#method-FormulaResultContainer-toJSON}{\code{FormulaResultContainer$toJSON()}}
\item \href{#method-FormulaResultContainer-fromJSON}{\code{FormulaResultContainer$fromJSON()}}
\item \href{#method-FormulaResultContainer-toJSONString}{\code{FormulaResultContainer$toJSONString()}}
\item \href{#method-FormulaResultContainer-fromJSONString}{\code{FormulaResultContainer$fromJSONString()}}
\item \href{#method-FormulaResultContainer-validateJSON}{\code{FormulaResultContainer$validateJSON()}}
\item \href{#method-FormulaResultContainer-toString}{\code{FormulaResultContainer$toString()}}
\item \href{#method-FormulaResultContainer-isValid}{\code{FormulaResultContainer$isValid()}}
\item \href{#method-FormulaResultContainer-getInvalidFields}{\code{FormulaResultContainer$getInvalidFields()}}
\item \href{#method-FormulaResultContainer-print}{\code{FormulaResultContainer$print()}}
\item \href{#method-FormulaResultContainer-clone}{\code{FormulaResultContainer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-new"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new FormulaResultContainer class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$new(
  id = NULL,
  molecularFormula = NULL,
  adduct = NULL,
  resultOverview = NULL,
  candidate = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Unique identifier of this formula candidate}

\item{\code{molecularFormula}}{molecular formula of this formula candidate}

\item{\code{adduct}}{Adduct of this formula candidate}

\item{\code{resultOverview}}{resultOverview}

\item{\code{candidate}}{candidate}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
FormulaResultContainer in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of FormulaResultContainer
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FormulaResultContainer
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
FormulaResultContainer in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of FormulaResultContainer
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FormulaResultContainer
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to FormulaResultContainer and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-toString"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of FormulaResultContainer
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-print"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FormulaResultContainer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FormulaResultContainer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FormulaResultContainer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
