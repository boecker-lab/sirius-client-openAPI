% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gui_parameters.R
\docType{class}
\name{GuiParameters}
\alias{GuiParameters}
\title{GuiParameters}
\format{
An \code{R6Class} generator object
}
\description{
Parameters to \"remote control\" the SIRIUS GUI.

GuiParameters Class
}
\details{
Create a new GuiParameters
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{selectedTab}}{Selected Result ab. character [optional]}

\item{\code{cid}}{ID of Selected compound. character [optional]}

\item{\code{fid}}{ID of Selected Formula candidate of the selected compound. character [optional]}

\item{\code{structureCandidateInChIKey}}{InChIKey of selected structure candidate of selected formula candidate. character [optional]}

\item{\code{bringToFront}}{If true bring SIRIUS GUI window to foreground. character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GuiParameters-new}{\code{GuiParameters$new()}}
\item \href{#method-GuiParameters-toJSON}{\code{GuiParameters$toJSON()}}
\item \href{#method-GuiParameters-fromJSON}{\code{GuiParameters$fromJSON()}}
\item \href{#method-GuiParameters-toJSONString}{\code{GuiParameters$toJSONString()}}
\item \href{#method-GuiParameters-fromJSONString}{\code{GuiParameters$fromJSONString()}}
\item \href{#method-GuiParameters-validateJSON}{\code{GuiParameters$validateJSON()}}
\item \href{#method-GuiParameters-toString}{\code{GuiParameters$toString()}}
\item \href{#method-GuiParameters-isValid}{\code{GuiParameters$isValid()}}
\item \href{#method-GuiParameters-getInvalidFields}{\code{GuiParameters$getInvalidFields()}}
\item \href{#method-GuiParameters-print}{\code{GuiParameters$print()}}
\item \href{#method-GuiParameters-clone}{\code{GuiParameters$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-new"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new GuiParameters class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$new(
  selectedTab = NULL,
  cid = NULL,
  fid = NULL,
  structureCandidateInChIKey = NULL,
  bringToFront = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selectedTab}}{Selected Result ab.}

\item{\code{cid}}{ID of Selected compound.}

\item{\code{fid}}{ID of Selected Formula candidate of the selected compound.}

\item{\code{structureCandidateInChIKey}}{InChIKey of selected structure candidate of selected formula candidate.}

\item{\code{bringToFront}}{If true bring SIRIUS GUI window to foreground.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
GuiParameters in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of GuiParameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of GuiParameters
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
GuiParameters in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of GuiParameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of GuiParameters
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to GuiParameters and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-toString"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of GuiParameters
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-print"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GuiParameters-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GuiParameters-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GuiParameters$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
