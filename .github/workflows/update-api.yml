name: UpdateApi
on: [workflow_call, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
    - name: Cache Sirius Release
      id: cache-sirius
      uses: actions/cache@v3
      with:
        path: .updater/api/sirius
        key: sirius
    - name: Check if cache is Empty
      if: steps.cache-sirius.outputs.cache-hit != 'true'
      uses: nick-fields/retry@v2
      with:
        max_attempts: 5
        timeout_minutes: 2
        command: |
            cd .updater/api
            curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
            echo "Download Complete"
            unzip *.zip
            echo "Api Ready"
    - name: Check cached version
      uses: nick-fields/retry@v2
      with:
        max_attempts: 5
        timeout_minutes: 2
        command: |
            currVersion=$(cat .updater/api/api.version)
            newVersion=$(curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | egrep -o "([0-9]{1,}\.)+[0-9]{1,}" | head -1)
            cd .updater/api
            if [ "$currVersion" != "$newVersion" ]; then
            sleep 1
            curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64-service.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
            unzip *.zip
            echo $newVersion > api.version
            fi
