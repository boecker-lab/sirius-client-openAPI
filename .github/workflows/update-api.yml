name: UpdateApi
on: [workflow_call, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
    - name: Cache Sirius Release
      id: cache-sirius
      uses: actions/cache@v3
      with:
        path: .updater/api/sirius
        key: sirius
    - name: Check if cache is Empty
      if: steps.cache-sirius.outputs.cache-hit != 'true'
      uses: nick-fields/retry@v2
      with:
        max_attempts: 5
        timeout_minutes: 2
        command: |
            cd .updater/api
            wget https://upload.uni-jena.de/data/64c27daa25ce66.74446221/sirius-6.0.0-SNAPSHOT-linux64.zip
            echo "Download Complete"
            unzip *.zip
            mv sirius-6.0.0-SNAPSHOT-linux64 sirius
            echo "Api Ready"
#     - name: Check cached version
#       uses: nick-fields/retry@v2
#       with:
#         max_attempts: 5
#         timeout_minutes: 2
#         command: |
#             cd .updater/api
#             currVersion=$(cat ./sirius/HashCode)
#             curl -s https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64.zip.sha256\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
#             newVersion=$(cat *.sha256 | cut -d " " -f 1)
#             echo New Version is $newVersion
#             if [ "$currVersion" != "$newVersion" ]; then
#             sleep 1
#             curl -s  https://api.github.com/repos/boecker-lab/sirius/releases | grep 'browser_download_url.*linux64.zip\"' | sort | tac | head -n 1 | cut -d : -f 2,3 | tr -d \" | wget -i -
#             unzip -o *.zip
#             echo $newVersion > ./sirius/HashCode
#             fi
