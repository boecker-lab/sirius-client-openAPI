/*
 * SIRIUS Nightsky API
 * OpenAPI REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.The provided OpenAPI specification allows to autogenerate clients for different programming languages.
 *
 * The version of the OpenAPI document: 0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package JSirius.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for Subscription
 */
public class SubscriptionTest {
    private final Subscription model = new Subscription();

    /**
     * Model tests for Subscription
     */
    @Test
    public void testSubscription() {
        // TODO: test Subscription
    }

    /**
     * Test the property 'sid'
     */
    @Test
    public void sidTest() {
        // TODO: test sid
    }

    /**
     * Test the property 'subscriberId'
     */
    @Test
    public void subscriberIdTest() {
        // TODO: test subscriberId
    }

    /**
     * Test the property 'subscriberName'
     */
    @Test
    public void subscriberNameTest() {
        // TODO: test subscriberName
    }

    /**
     * Test the property 'expirationDate'
     */
    @Test
    public void expirationDateTest() {
        // TODO: test expirationDate
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'countQueries'
     */
    @Test
    public void countQueriesTest() {
        // TODO: test countQueries
    }

    /**
     * Test the property 'compoundLimit'
     */
    @Test
    public void compoundLimitTest() {
        // TODO: test compoundLimit
    }

    /**
     * Test the property 'compoundHashRecordingTime'
     */
    @Test
    public void compoundHashRecordingTimeTest() {
        // TODO: test compoundHashRecordingTime
    }

    /**
     * Test the property 'maxQueriesPerCompound'
     */
    @Test
    public void maxQueriesPerCompoundTest() {
        // TODO: test maxQueriesPerCompound
    }

    /**
     * Test the property 'maxUserAccounts'
     */
    @Test
    public void maxUserAccountsTest() {
        // TODO: test maxUserAccounts
    }

    /**
     * Test the property 'serviceUrl'
     */
    @Test
    public void serviceUrlTest() {
        // TODO: test serviceUrl
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'tos'
     */
    @Test
    public void tosTest() {
        // TODO: test tos
    }

    /**
     * Test the property 'pp'
     */
    @Test
    public void ppTest() {
        // TODO: test pp
    }

}
