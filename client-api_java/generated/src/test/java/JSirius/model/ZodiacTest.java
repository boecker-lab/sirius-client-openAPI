/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.
 *
 * The version of the OpenAPI document: v0.9 on SIRIUS 6.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package JSirius.model;

import JSirius.model.ZodiacEdgeFilterThresholds;
import JSirius.model.ZodiacEpochs;
import JSirius.model.ZodiacNumberOfConsideredCandidatesAt300Mz;
import JSirius.model.ZodiacNumberOfConsideredCandidatesAt800Mz;
import JSirius.model.ZodiacRunInTwoSteps;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for Zodiac
 */
public class ZodiacTest {
    private final Zodiac model = new Zodiac();

    /**
     * Model tests for Zodiac
     */
    @Test
    public void testZodiac() {
        // TODO: test Zodiac
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'consideredCandidatesAt300Mz'
     */
    @Test
    public void consideredCandidatesAt300MzTest() {
        // TODO: test consideredCandidatesAt300Mz
    }

    /**
     * Test the property 'consideredCandidatesAt800Mz'
     */
    @Test
    public void consideredCandidatesAt800MzTest() {
        // TODO: test consideredCandidatesAt800Mz
    }

    /**
     * Test the property 'runInTwoSteps'
     */
    @Test
    public void runInTwoStepsTest() {
        // TODO: test runInTwoSteps
    }

    /**
     * Test the property 'edgeFilterThresholds'
     */
    @Test
    public void edgeFilterThresholdsTest() {
        // TODO: test edgeFilterThresholds
    }

    /**
     * Test the property 'gibbsSamplerParameters'
     */
    @Test
    public void gibbsSamplerParametersTest() {
        // TODO: test gibbsSamplerParameters
    }

}
