{"openapi":"3.0.1","info":{"title":"SIRIUS Nightsky API","description":"OpenAPI REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.The provided OpenAPI specification allows to autogenerate clients for different programming languages.","license":{"name":"GNU Affero General Public License v3.0","url":"https://www.gnu.org/licenses/agpl-3.0.txt"},"version":"0.9"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"tags":[{"name":"Graphical user Interface","description":"Open, control and close SIRIUS GUI on the specified project-space."},{"name":"Computations","description":"Start, monitor and cancel compute jobs."},{"name":"Login and Account","description":"Perform signIn, signOut and signUp. Get tokens and account information."},{"name":"Formula Results","description":"Access results for all formula candidates of a given compound (aka feature)."},{"name":"Compounds","description":"Access compounds (aka features) of a specified project-space."},{"name":"Project-Spaces","description":"Manage SIRIUS project-spaces."}],"paths":{"/api/projects/{projectId}":{"get":{"tags":["Project-Spaces"],"summary":"Get project space info by its projectId.","description":"Get project space info by its projectId.","operationId":"getProjectSpace","parameters":[{"name":"projectId","in":"path","description":"unique name/identifier tof the project-space to be accessed.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectSpaceId"}}}}}},"put":{"tags":["Project-Spaces"],"summary":"Open an existing project-space and make it accessible via the given projectId.","description":"Open an existing project-space and make it accessible via the given projectId.","operationId":"openProjectSpace","parameters":[{"name":"projectId","in":"path","description":"unique name/identifier that shall be used to access the opened project-space.","required":true,"schema":{"type":"string"}},{"name":"pathToProject","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectSpaceId"}}}}}},"post":{"tags":["Project-Spaces"],"summary":"Create and open a new project-space at given location and make it accessible via the given projectId.","description":"Create and open a new project-space at given location and make it accessible via the given projectId.","operationId":"createProjectSpace","parameters":[{"name":"projectId","in":"path","description":"unique name/identifier that shall be used to access the newly created project-space.","required":true,"schema":{"type":"string"}},{"name":"pathToProject","in":"query","required":true,"schema":{"type":"string"}},{"name":"pathToSourceProject","in":"query","required":false,"schema":{"type":"string"}},{"name":"awaitImport","in":"query","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectSpaceId"}}}}}},"delete":{"tags":["Project-Spaces"],"summary":"Close project-space and remove it from application.","description":"Close project-space and remove it from application. Project-space will NOT be deleted from disk.","operationId":"closeProjectSpace","parameters":[{"name":"projectId","in":"path","description":"unique name/identifier of the  project-space to be closed.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/api/projects/{projectId}/jobs":{"get":{"tags":["Computations"],"summary":"Get job information and its current state and progress (if available).","description":"Get job information and its current state and progress (if available).","operationId":"getJobs","parameters":[{"name":"projectId","in":"path","description":"project-space to run jobs on","required":true,"schema":{"type":"string"}},{"name":"includeState","in":"query","description":"include {@link de.unijena.bioinf.ms.middleware.compute.model.JobProgress de.unijena.bioinf.ms.middleware.compute.model.JobProgress} states.","required":false,"schema":{"type":"boolean","default":false}},{"name":"includeCommand","in":"query","description":"include job commands.","required":false,"schema":{"type":"boolean","default":false}},{"name":"includeAffectedCompounds","in":"query","description":"include list of compound ids affected by this job (if available)","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/JobId"}}}}}}},"post":{"tags":["Computations"],"summary":"Start computation for given compounds and with given parameters.","description":"Start computation for given compounds and with given parameters.","operationId":"startJob","parameters":[{"name":"projectId","in":"path","description":"project-space to run jobs on","required":true,"schema":{"type":"string"}},{"name":"includeState","in":"query","description":"include {@link de.unijena.bioinf.ms.middleware.compute.model.JobProgress de.unijena.bioinf.ms.middleware.compute.model.JobProgress} state.","required":false,"schema":{"type":"boolean","default":true}},{"name":"includeCommand","in":"query","description":"include job command.","required":false,"schema":{"type":"boolean","default":true}},{"name":"includeAffectedCompounds","in":"query","description":"include list of compound ids affected by this job (if available)","required":false,"schema":{"type":"boolean","default":false}}],"requestBody":{"description":"configuration of the job that will be submitted of the job to be returned","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobSubmission"}}},"required":true},"responses":{"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobId"}}}}}}},"/api/projects/{projectId}/jobs-from-config":{"post":{"tags":["Computations"],"summary":"Start computation for given compounds and with parameters from a stored job-config.","description":"Start computation for given compounds and with parameters from a stored job-config.","operationId":"startJobFromConfig","parameters":[{"name":"projectId","in":"path","description":"project-space to run jobs on","required":true,"schema":{"type":"string"}},{"name":"jobConfigName","in":"query","description":"name if the config to be used","required":true,"schema":{"type":"string"}},{"name":"recompute","in":"query","description":"enable or disable recompute. If null the stored value will be used.","required":false,"schema":{"type":"boolean"}},{"name":"includeState","in":"query","description":"include {@link de.unijena.bioinf.ms.middleware.compute.model.JobProgress de.unijena.bioinf.ms.middleware.compute.model.JobProgress} state.","required":false,"schema":{"type":"boolean","default":true}},{"name":"includeCommand","in":"query","description":"include job command.","required":false,"schema":{"type":"boolean","default":true}},{"name":"includeAffectedCompounds","in":"query","description":"include list of compound ids affected by this job (if available)","required":false,"schema":{"type":"boolean","default":false}}],"requestBody":{"description":"compound ids to be computed","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobId"}}}}}}},"/api/projects/{projectId}/gui":{"post":{"tags":["Graphical user Interface"],"summary":"Open GUI instance on specified project-space and bring the GUI window to foreground.","description":"Open GUI instance on specified project-space and bring the GUI window to foreground.","operationId":"openGui","parameters":[{"name":"projectId","in":"path","description":"of project-space the GUI instance will connect to.","required":true,"schema":{"type":"string"}},{"name":"readOnly","in":"query","description":"open in read-only mode.","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"200":{"description":"OK"}},"deprecated":true},"delete":{"tags":["Graphical user Interface"],"summary":"Close GUI instance of given project-space if available.","description":"Close GUI instance of given project-space if available.","operationId":"closeGui","parameters":[{"name":"projectId","in":"path","description":"if project-space the GUI instance is connected to.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}},"deprecated":true},"patch":{"tags":["Graphical user Interface"],"summary":"Apply given changes to the running GUI instance.","description":"Apply given changes to the running GUI instance.","operationId":"applyToGui","parameters":[{"name":"projectId","in":"path","description":"of project-space the GUI instance is connected to.","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"parameters that should be applied.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GuiParameters"}}},"required":true},"responses":{"200":{"description":"OK"}},"deprecated":true}},"/api/projects/{projectId}/compounds":{"get":{"tags":["Compounds"],"summary":"Get all available compounds/features in the given project-space.","description":"Get all available compounds/features in the given project-space.","operationId":"getCompounds","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"topAnnotation","in":"query","description":"include the top annotation of this feature into the output (if available).","required":false,"schema":{"type":"boolean","default":false}},{"name":"msData","in":"query","description":"include corresponding source data (MS and MS/MS) into the output.","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"CompoundIds with additional annotations and MS/MS data (if specified).","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CompoundId"}}}}}}},"post":{"tags":["Compounds"],"summary":"Import ms/ms data in given format from local filesystem into the specified project-space","description":"Import ms/ms data in given format from local filesystem into the specified project-space.\n The import will run in a background job\n Possible formats (ms, mgf, cef, msp, mzML, mzXML, project-space)\n <p>","operationId":"importCompounds","parameters":[{"name":"projectId","in":"path","description":"project-space to import into.","required":true,"schema":{"type":"string"}},{"name":"alignLCMSRuns","in":"query","description":"If true, multiple LCMS Runs (mzML, mzXML) will be aligned during import/feature finding","required":false,"schema":{"type":"boolean","default":false}},{"name":"allowMs1OnlyData","in":"query","required":false,"schema":{"type":"boolean","default":true}},{"name":"ignoreFormulas","in":"query","required":false,"schema":{"type":"boolean","default":false}}],"requestBody":{"description":"List of file and directory paths to import","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}},"required":true},"responses":{"200":{"description":"JobId background job that imports given compounds/features.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobId"}}}}}}},"/api/projects/{projectId}/compounds/import-from-string":{"post":{"tags":["Compounds"],"summary":"Import ms/ms data from the given format into the specified project-space\n Possible formats (ms, mgf, cef, msp, mzML, mzXML)","description":"Import ms/ms data from the given format into the specified project-space\n Possible formats (ms, mgf, cef, msp, mzML, mzXML)","operationId":"importCompoundsFromString","parameters":[{"name":"projectId","in":"path","description":"project-space to import into.","required":true,"schema":{"type":"string"}},{"name":"format","in":"query","description":"data format specified by the usual file extension of the format (without [.])","required":true,"schema":{"type":"string"}},{"name":"sourceName","in":"query","description":"name that specifies the data source. Can e.g. be a file path or just a name.","required":false,"schema":{"type":"string"}}],"requestBody":{"description":"data content in specified format","content":{"text/plain":{"schema":{"type":"string"}}},"required":true},"responses":{"200":{"description":"CompoundIds of the imported compounds/features.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CompoundId"}}}}}}}},"/api/job-configs/{name}":{"get":{"tags":["Computations"],"summary":"Request job configuration with given name.","description":"Request job configuration with given name.","operationId":"getJobConfig","parameters":[{"name":"name","in":"path","description":"name of the job-config to return","required":true,"schema":{"type":"string"}},{"name":"includeConfigMap","in":"query","description":"if true the generic configmap will be part of the output","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"{@link JobSubmission JobSubmission} for given name.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobSubmission"}}}}}},"post":{"tags":["Computations"],"summary":"Add new job configuration with given name.","description":"Add new job configuration with given name.","operationId":"postJobConfig","parameters":[{"name":"name","in":"path","description":"name of the job-config to add","required":true,"schema":{"type":"string"}},{"name":"overrideExisting","in":"query","required":false,"schema":{"type":"boolean","default":false}}],"requestBody":{"description":"to add","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobSubmission"}}},"required":true},"responses":{"200":{"description":"Probably modified name of the config (to ensure filesystem path compatibility).","content":{"text/plain":{"schema":{"type":"string"}}}}}},"delete":{"tags":["Computations"],"summary":"Delete job configuration with given name.","description":"Delete job configuration with given name.","operationId":"deleteJobConfig","parameters":[{"name":"name","in":"path","description":"name of the job-config to delete","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Accepted"}}}},"/api/account/logout":{"post":{"tags":["Login and Account"],"summary":"Logout from SIRIUS web services.","description":"Logout from SIRIUS web services.","operationId":"logout","responses":{"200":{"description":"OK"}}}},"/api/account/login":{"post":{"tags":["Login and Account"],"summary":"Login into SIRIUS web services.","description":"Login into SIRIUS web services.","operationId":"login","parameters":[{"name":"acceptTerms","in":"query","required":true,"schema":{"type":"boolean"}},{"name":"failWhenLoggedIn","in":"query","description":"if true request fails if an active login already exists.","required":false,"schema":{"type":"boolean","default":false}},{"name":"includeSubs","in":"query","description":"include available and active subscriptions in {@link AccountInfo AccountInfo}.","required":false,"schema":{"type":"boolean","default":false}}],"requestBody":{"description":"used to log in.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountCredentials"}}},"required":true},"responses":{"200":{"description":"Basic information about the account that has been logged in and its subscriptions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountInfo"}}}}}}},"/api/version.json":{"get":{"tags":["version-info-controller"],"operationId":"getVersionInfo","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"string"}}}}}}},"/api/projects":{"get":{"tags":["Project-Spaces"],"summary":"List all opened project spaces.","description":"List all opened project spaces.","operationId":"getProjectSpaces","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProjectSpaceId"}}}}}}}},"/api/projects/{projectId}/jobs/{jobId}":{"get":{"tags":["Computations"],"summary":"Get job information and its current state and progress (if available).","description":"Get job information and its current state and progress (if available).","operationId":"getJob","parameters":[{"name":"projectId","in":"path","description":"project-space to run jobs on","required":true,"schema":{"type":"string"}},{"name":"jobId","in":"path","description":"of the job to be returned","required":true,"schema":{"type":"string"}},{"name":"includeState","in":"query","description":"include {@link de.unijena.bioinf.ms.middleware.compute.model.JobProgress de.unijena.bioinf.ms.middleware.compute.model.JobProgress} state.","required":false,"schema":{"type":"boolean","default":true}},{"name":"includeCommand","in":"query","description":"include job command.","required":false,"schema":{"type":"boolean","default":false}},{"name":"includeAffectedCompounds","in":"query","description":"include list of compound ids affected by this job (if available)","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobId"}}}}}},"delete":{"tags":["Computations"],"summary":"Delete job.","description":"Delete job. Specify how to behave for running jobs.","operationId":"deleteJob","parameters":[{"name":"projectId","in":"path","description":"project-space to run jobs on","required":true,"schema":{"type":"string"}},{"name":"jobId","in":"path","description":"of the job to be deleted","required":true,"schema":{"type":"string"}},{"name":"cancelIfRunning","in":"query","description":"If true job will be canceled if it is not finished. Otherwise,\n                        deletion will fail for running jobs or request will block until job has finished.","required":false,"schema":{"type":"boolean","default":true}},{"name":"awaitDeletion","in":"query","description":"If true request will block until deletion succeeded or failed.\n                        If the job is still running the request will wait until the job has finished.","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"202":{"description":"Accepted"}}}},"/api/projects/{projectId}/compounds/{compoundId}/top-structure":{"get":{"tags":["Formula Results"],"summary":"Best Scoring StructureCandidate over all molecular formular resutls that belong to the specified\n compound/feature (compoundId).","description":"Best Scoring StructureCandidate over all molecular formular resutls that belong to the specified\n compound/feature (compoundId).","operationId":"getTopStructureCandidate","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"compoundId","in":"path","description":"compound/feature the formula result belongs to.","required":true,"schema":{"type":"string"}},{"name":"fingerprint","in":"query","description":"add molecular fingerprint to StructureCandidates","required":false,"schema":{"type":"boolean","default":false}},{"name":"dbLinks","in":"query","description":"add dbLinks to StructureCandidates","required":false,"schema":{"type":"boolean","default":false}},{"name":"pubMedIds","in":"query","description":"add PubMedIds (citation count) to StructureCandidates","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Best scoring FormulaResultContainers of this compound/feature with specified extensions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StructureCandidate"}}}}}}},"/api/projects/{projectId}/compounds/{compoundId}/formulas":{"get":{"tags":["Formula Results"],"summary":"List of all FormulaResultContainers available for this compound/feature with minimal information.","description":"List of all FormulaResultContainers available for this compound/feature with minimal information.\n Can be enriched with an optional results overview.","operationId":"getFormulaIds","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"compoundId","in":"path","description":"compound/feature the formula result belongs to.","required":true,"schema":{"type":"string"}},{"name":"resultOverview","in":"query","description":"add ResultOverview to the FormulaResultContainers","required":false,"schema":{"type":"boolean","default":true}},{"name":"formulaCandidate","in":"query","description":"add extended formula candidate information to the FormulaResultContainers","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"All FormulaResultContainers of this compound/feature with.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/FormulaResultContainer"}}}}}}}},"/api/projects/{projectId}/compounds/{compoundId}/formulas/{formulaId}":{"get":{"tags":["Formula Results"],"summary":"FormulaResultContainers for the given 'formulaId' with minimal information.","description":"FormulaResultContainers for the given 'formulaId' with minimal information.\n Can be enriched with an optional results overview and formula candidate information.","operationId":"getFormulaResult","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"compoundId","in":"path","description":"compound/feature the formula result belongs to.","required":true,"schema":{"type":"string"}},{"name":"formulaId","in":"path","description":"identifier of the requested formula result","required":true,"schema":{"type":"string"}},{"name":"resultOverview","in":"query","description":"add ResultOverview to the FormulaResultContainer","required":false,"schema":{"type":"boolean","default":true}},{"name":"formulaCandidate","in":"query","description":"add extended formula candidate information to the FormulaResultContainer","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"200":{"description":"FormulaResultContainers of this compound/feature with.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FormulaResultContainer"}}}}}}},"/api/projects/{projectId}/compounds/{compoundId}/formulas/{formulaId}/tree":{"get":{"tags":["Formula Results"],"summary":"Returns fragmentation tree (SIRIUS) for the given formula result identifier\n This tree is used to rank formula candidates (treeScore).","description":"Returns fragmentation tree (SIRIUS) for the given formula result identifier\n This tree is used to rank formula candidates (treeScore).","operationId":"getFragTree","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"compoundId","in":"path","description":"compound/feature the formula result belongs to.","required":true,"schema":{"type":"string"}},{"name":"formulaId","in":"path","description":"identifier of the requested formula result","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Fragmentation Tree","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FragmentationTree"}}}}}}},"/api/projects/{projectId}/compounds/{compoundId}/formulas/{formulaId}/structures":{"get":{"tags":["Formula Results"],"summary":"List of StructureCandidates the given 'formulaId' with minimal information.","description":"List of StructureCandidates the given 'formulaId' with minimal information.\n StructureCandidates can be enriched with molecular fingerprint, structure database links and pubmed ids,","operationId":"getStructureCandidates","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"compoundId","in":"path","description":"compound/feature the formula result belongs to.","required":true,"schema":{"type":"string"}},{"name":"formulaId","in":"path","description":"identifier of the requested formula result","required":true,"schema":{"type":"string"}},{"name":"fingerprint","in":"query","description":"add molecular fingerprint to StructureCandidates","required":false,"schema":{"type":"boolean","default":false}},{"name":"dbLinks","in":"query","description":"add dbLinks to StructureCandidates","required":false,"schema":{"type":"boolean","default":false}},{"name":"pubMedIds","in":"query","description":"add PubMedIds (citation count) to StructureCandidates","required":false,"schema":{"type":"boolean","default":false}},{"name":"topK","in":"query","description":"retrieve only the top k StructureCandidates","required":false,"schema":{"type":"integer","format":"int32","default":-1}}],"responses":{"200":{"description":"FormulaResultContainers of this compound/feature with specified extensions.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StructureCandidate"}}}}}}}},"/api/projects/{projectId}/compounds/{compoundId}/formulas/{formulaId}/isotope-pattern":{"get":{"tags":["Formula Results"],"summary":"Returns simulated isotope pattern (SIRIUS) for the given formula result identifier.","description":"Returns simulated isotope pattern (SIRIUS) for the given formula result identifier.\n This simulated isotope pattern is used to rank formula candidates (treeScore).","operationId":"getSimulatedIsotopePattern","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"compoundId","in":"path","description":"compound/feature the formula result belongs to.","required":true,"schema":{"type":"string"}},{"name":"formulaId","in":"path","description":"identifier of the requested formula result","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Simulated isotope pattern","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnnotatedSpectrum"}}}}}}},"/api/projects/{projectId}/compounds/{compoundId}/formulas/{formulaId}/fingerprint":{"get":{"tags":["Formula Results"],"summary":"Returns predicted fingerprint (CSI:FingerID) for the given formula result identifier\n This fingerprint is used to perfom structure database search and predict compound classes.","description":"Returns predicted fingerprint (CSI:FingerID) for the given formula result identifier\n This fingerprint is used to perfom structure database search and predict compound classes.","operationId":"getFingerprintPrediction","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"compoundId","in":"path","description":"compound/feature the formula result belongs to.","required":true,"schema":{"type":"string"}},{"name":"formulaId","in":"path","description":"identifier of the requested formula result","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"probabilistic fingerprint predicted by CSI:FingerID","content":{"application/json":{"schema":{"type":"array","items":{"type":"number","format":"double"}}}}}}}},"/api/projects/{projectId}/compounds/{compoundId}/formulas/{formulaId}/canopus-predictions":{"get":{"tags":["Formula Results"],"summary":"All predicted compound classes (CANOPUS) from ClassyFire and NPC and their probabilities,","description":"All predicted compound classes (CANOPUS) from ClassyFire and NPC and their probabilities,","operationId":"getCanopusPredictions","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"compoundId","in":"path","description":"compound/feature the formula result belongs to.","required":true,"schema":{"type":"string"}},{"name":"formulaId","in":"path","description":"identifier of the requested formula result","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Predicted compound classes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CanopusPredictions"}}}}}}},"/api/projects/{projectId}/compounds/{compoundId}/formulas/{formulaId}/best-canopus-predictions":{"get":{"tags":["Formula Results"],"summary":"Best matching compound classes,\n Set of the highest scoring compound classes CANOPUS) on each hierarchy level of  the ClassyFire and NPC ontology,","description":"Best matching compound classes,\n Set of the highest scoring compound classes CANOPUS) on each hierarchy level of  the ClassyFire and NPC ontology,","operationId":"getBestMatchingCanopusPredictions","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"compoundId","in":"path","description":"compound/feature the formula result belongs to.","required":true,"schema":{"type":"string"}},{"name":"formulaId","in":"path","description":"identifier of the requested formula result","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Best matching Predicted compound classes","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompoundClasses"}}}}}}},"/api/projects/{projectId}/compounds/{cid}":{"get":{"tags":["Compounds"],"summary":"Get compound/feature with the given identifier from the specified project-space.","description":"Get compound/feature with the given identifier from the specified project-space.","operationId":"getCompound","parameters":[{"name":"projectId","in":"path","description":"project-space to read from.","required":true,"schema":{"type":"string"}},{"name":"cid","in":"path","description":"identifier of compound to access.","required":true,"schema":{"type":"string"}},{"name":"topAnnotation","in":"query","description":"include the top annotation of this feature into the output (if available).","required":false,"schema":{"type":"boolean","default":false}},{"name":"msData","in":"query","description":"include corresponding source data (MS and MS/MS) into the output.","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"CompoundId with additional annotations and MS/MS data (if specified).","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompoundId"}}}}}},"delete":{"tags":["Compounds"],"summary":"Delete compound/feature with the given identifier from the specified project-space.","description":"Delete compound/feature with the given identifier from the specified project-space.","operationId":"deleteCompound","parameters":[{"name":"projectId","in":"path","description":"project-space to delete from.","required":true,"schema":{"type":"string"}},{"name":"cid","in":"path","description":"identifier of compound to delete.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/api/job-configs":{"get":{"tags":["Computations"],"summary":"Request all available job configurations","description":"Request all available job configurations","operationId":"getJobConfigs","parameters":[{"name":"includeConfigMap","in":"query","description":"if true the generic configmap will be part of the output","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"list of available {@link JobSubmission JobSubmission}s","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/JobSubmission"}}}}}}}},"/api/default-job-config":{"get":{"tags":["Computations"],"summary":"Request default job configuration","description":"Request default job configuration","operationId":"getDefaultJobConfig","parameters":[{"name":"includeConfigMap","in":"query","description":"if true, generic configmap with-defaults will be included","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"{@link JobSubmission JobSubmission} with all parameters set to default values.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobSubmission"}}}}}}},"/api/account/subscriptions":{"get":{"tags":["Login and Account"],"summary":"Get available subscriptions of the account currently logged in.","description":"Get available subscriptions of the account currently logged in. Fails if not logged in.","operationId":"getSubscriptions","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Subscription"}}}}}}}},"/api/account/signUp":{"get":{"tags":["Login and Account"],"summary":"Open SignUp window in system browser and return signUp link.","description":"Open SignUp window in system browser and return signUp link.","operationId":"signUp","responses":{"200":{"description":"OK","content":{"text/plain;charset=UTF-8":{"schema":{"type":"string"}}}}}}},"/api/account/signUpURL":{"get":{"tags":["Login and Account"],"summary":"Get SignUp URL (For signUp via web browser)","description":"Get SignUp URL (For signUp via web browser)","operationId":"getSignUpURL","responses":{"200":{"description":"OK","content":{"text/plain;charset=UTF-8":{"schema":{"type":"string"}}}}}}},"/api/account/isLoggedIn":{"get":{"tags":["Login and Account"],"summary":"Check if a user is logged in.","description":"Check if a user is logged in.","operationId":"isLoggedIn","responses":{"200":{"description":"true if the user is logged in","content":{"application/json":{"schema":{"type":"boolean"}}}}}}},"/api/account/":{"get":{"tags":["Login and Account"],"summary":"Get information about the account currently logged in.","description":"Get information about the account currently logged in. Fails if not logged in.","operationId":"getAccountInfo","parameters":[{"name":"includeSubs","in":"query","description":"include available and active subscriptions in {@link AccountInfo AccountInfo}.","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"Basic information about the account that has been logged in and its subscriptions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountInfo"}}}}}}}},"components":{"schemas":{"ProjectSpaceId":{"type":"object","properties":{"name":{"type":"string"},"path":{"type":"string"}},"description":""},"Canopus":{"type":"object","properties":{"enabled":{"type":"boolean","description":"tags whether the tool is enabled"}},"description":"User/developer friendly parameter subset for the CANOPUS tool\n CANOPUS is parameter free, so this Object is just a flag that canopus should be executed."},"FingerprintPrediction":{"type":"object","properties":{"enabled":{"type":"boolean","description":"tags whether the tool is enabled"},"useScoreThreshold":{"type":"boolean","description":"If true, an adaptive soft threshold will be applied to only compute Fingerprints for promising formula candidates\n Enabling is highly recommended."}},"description":"User/developer friendly parameter subset for the CSI:FingerID Fingerprint tool"},"JobSubmission":{"type":"object","properties":{"compoundIds":{"type":"array","description":"Compounds that should be the input for this Job","items":{"type":"string"}},"fallbackAdducts":{"type":"array","description":"Describes how to deal with Adducts: Fallback adducts are considered if the auto detection did not find any indication for an ion mode.\n Pos Examples: [M+H]+,[M]+,[M+K]+,[M+Na]+,[M+H-H2O]+,[M+Na2-H]+,[M+2K-H]+,[M+NH4]+,[M+H3O]+,[M+MeOH+H]+,[M+ACN+H]+,[M+2ACN+H]+,[M+IPA+H]+,[M+ACN+Na]+,[M+DMSO+H]+\n Neg Examples: [M-H]-,[M]-,[M+K-2H]-,[M+Cl]-,[M-H2O-H]-,[M+Na-2H]-,M+FA-H]-,[M+Br]-,[M+HAc-H]-,[M+TFA-H]-,[M+ACN-H]-","items":{"type":"string"}},"enforcedAdducts":{"type":"array","description":"Describes how to deal with Adducts:  Enforced adducts that are always considered.\n Pos Examples: [M+H]+,[M]+,[M+K]+,[M+Na]+,[M+H-H2O]+,[M+Na2-H]+,[M+2K-H]+,[M+NH4]+,[M+H3O]+,[M+MeOH+H]+,[M+ACN+H]+,[M+2ACN+H]+,[M+IPA+H]+,[M+ACN+Na]+,[M+DMSO+H]+\n Neg Examples: [M-H]-,[M]-,[M+K-2H]-,[M+Cl]-,[M-H2O-H]-,[M+Na-2H]-,M+FA-H]-,[M+Br]-,[M+HAc-H]-,[M+TFA-H]-,[M+ACN-H]-","items":{"type":"string"}},"detectableAdducts":{"type":"array","description":"Describes how to deal with Adducts: Detectable adducts which are only considered if there is an indication in the MS1 scan (e.g. correct mass delta).\n Pos Examples: [M+H]+,[M]+,[M+K]+,[M+Na]+,[M+H-H2O]+,[M+Na2-H]+,[M+2K-H]+,[M+NH4]+,[M+H3O]+,[M+MeOH+H]+,[M+ACN+H]+,[M+2ACN+H]+,[M+IPA+H]+,[M+ACN+Na]+,[M+DMSO+H]+\n Neg Examples: [M-H]-,[M]-,[M+K-2H]-,[M+Cl]-,[M-H2O-H]-,[M+Na-2H]-,M+FA-H]-,[M+Br]-,[M+HAc-H]-,[M+TFA-H]-,[M+ACN-H]-","items":{"type":"string"}},"recompute":{"type":"boolean","description":"Indicate if already existing result for a tool to be executed should be overwritten or not."},"formulaIdParas":{"$ref":"#/components/schemas/Sirius"},"zodiacParas":{"$ref":"#/components/schemas/Zodiac"},"fingerprintPredictionParas":{"$ref":"#/components/schemas/FingerprintPrediction"},"structureDbSearchParas":{"$ref":"#/components/schemas/StructureDbSearch"},"canopusParas":{"$ref":"#/components/schemas/Canopus"},"configMap":{"type":"object","additionalProperties":{"type":"string"},"description":"As an alternative to the object based parameters, this map allows to store key value pairs\n of ALL SIRIUS parameters. All possible parameters can be retrieved from SIRIUS via the respective endpoint."}},"description":"Object to submit a job to be executed by SIRIUS"},"Sirius":{"type":"object","properties":{"enabled":{"type":"boolean","description":"tags whether the tool is enabled"},"profile":{"type":"string","description":"Instrument specific profile for internal algorithms\n Just select what comes closest to the instrument that was used for measuring the data.","enum":["QTOF","ORBI","FTICR"]},"numberOfCandidates":{"type":"integer","description":"Number of formula candidates to keep as result list (Formula Candidates).","format":"int32"},"numberOfCandidatesPerIon":{"type":"integer","description":"Use this parameter if you want to force SIRIUS to report at least\n NumberOfCandidatesPerIon results per ionization.\n if <= 0, this parameter will have no effect and just the top\n NumberOfCandidates results will be reported.","format":"int32"},"massAccuracyMS2ppm":{"type":"number","description":"Maximum allowed mass accuracy. Only molecular formulas within this mass window are considered.","format":"double"},"isotopeMs2Settings":{"type":"string","description":"Specify how isotope patterns in MS/MS should be handled.\n <p>\n FILTER: When filtering is enabled, molecular formulas are excluded if their\n theoretical isotope pattern does not match the theoretical one, even if their MS/MS pattern has high score.\n <p>\n SCORE: Use them for SCORING. To use this the instrument should produce clear MS/MS isotope patterns\n <p>\n IGNORE: Ignore that there might be isotope patterns in MS/MS","enum":["IGNORE","FILTER","SCORE"]},"formulaSearchDBs":{"type":"array","description":"List Structure database to extract molecular formulas from to reduce formula search space.\n SIRIUS is quite good at de novo formula annotation, so only enable if you have a good reason.","items":{"type":"string","enum":["ALL","ALL_BUT_INSILICO","PUBCHEM","MESH","HMDB","KNAPSACK","CHEBI","PUBMED","BIO","KEGG","HSDB","MACONDA","METACYC","GNPS","ZINCBIO","TRAIN","UNDP","YMDB","PLANTCYC","NORMAN","ADDITIONAL","SUPERNATURAL","COCONUT","PUBCHEMANNOTATIONBIO","PUBCHEMANNOTATIONDRUG","PUBCHEMANNOTATIONSAFETYANDTOXIC","PUBCHEMANNOTATIONFOOD","LIPID","KEGGMINE","ECOCYCMINE","YMDBMINE"]}},"enforcedFormulaConstraints":{"type":"string","description":"These configurations hold the information how to autodetect elements based on the given formula constraints.\n Note: If the compound is already assigned to a specific molecular formula, this annotation is ignored.\n <p>\n Enforced: Enforced elements are always considered"},"fallbackFormulaConstraints":{"type":"string","description":"These configurations hold the information how to autodetect elements based on the given formula constraints.\n Note: If the compound is already assigned to a specific molecular formula, this annotation is ignored.\n <p>\n Fallback: Fallback elements are used, if the auto-detection fails (e.g. no isotope pattern available)"},"detectableElements":{"type":"array","description":"These configurations hold the information how to autodetect elements based on the given formula constraints.\n Note: If the compound is already assigned to a specific molecular formula, this annotation is ignored.\n <p>\n Detectable: Detectable elements are added to the chemical alphabet, if there are indications for them (e.g. in isotope pattern)","items":{"type":"string"}},"ilpTimeout":{"$ref":"#/components/schemas/Timeout"},"useHeuristic":{"$ref":"#/components/schemas/UseHeuristic"}},"description":"User/developer friendly parameter subset for the Formula/SIRIUS tool"},"StructureDbSearch":{"type":"object","properties":{"enabled":{"type":"boolean","description":"tags whether the tool is enabled"},"structureSearchDBs":{"type":"array","description":"Structure databases to search in","items":{"type":"string","enum":["ALL","ALL_BUT_INSILICO","PUBCHEM","MESH","HMDB","KNAPSACK","CHEBI","PUBMED","BIO","KEGG","HSDB","MACONDA","METACYC","GNPS","ZINCBIO","TRAIN","UNDP","YMDB","PLANTCYC","NORMAN","ADDITIONAL","SUPERNATURAL","COCONUT","PUBCHEMANNOTATIONBIO","PUBCHEMANNOTATIONDRUG","PUBCHEMANNOTATIONSAFETYANDTOXIC","PUBCHEMANNOTATIONFOOD","LIPID","KEGGMINE","ECOCYCMINE","YMDBMINE"]}},"tagLipids":{"type":"boolean","description":"Candidates matching the lipid class estimated by El Gordo will be tagged.\n The lipid class will only be available if El Gordo predicts that the MS/MS is a lipid spectrum.\n If this parameter is set to 'false' El Gordo will still be executed and e.g. improve the fragmentation\n tree, but the matching structure candidates will not be tagged if they match lipid class."}},"description":"User/developer friendly parameter subset for the CSI:FingerID structure db search tool."},"Timeout":{"type":"object","properties":{"numberOfSecondsPerDecomposition":{"type":"integer","format":"int32"},"numberOfSecondsPerInstance":{"type":"integer","format":"int32"},"identifier":{"type":"string"}},"description":""},"UseHeuristic":{"type":"object","properties":{"mzToUseHeuristic":{"type":"integer","format":"int32"},"mzToUseHeuristicOnly":{"type":"integer","format":"int32"},"identifier":{"type":"string"}},"description":""},"Zodiac":{"type":"object","properties":{"enabled":{"type":"boolean","description":"tags whether the tool is enabled"},"consideredCandidatesAt300Mz":{"$ref":"#/components/schemas/ZodiacNumberOfConsideredCandidatesAt300Mz"},"consideredCandidatesAt800Mz":{"$ref":"#/components/schemas/ZodiacNumberOfConsideredCandidatesAt800Mz"},"runInTwoSteps":{"$ref":"#/components/schemas/ZodiacRunInTwoSteps"},"edgeFilterThresholds":{"$ref":"#/components/schemas/ZodiacEdgeFilterThresholds"},"gibbsSamplerParameters":{"$ref":"#/components/schemas/ZodiacEpochs"}},"description":"User/developer friendly parameter subset for the ZODIAC tool (Network base molecular formula re-ranking)."},"ZodiacEdgeFilterThresholds":{"type":"object","properties":{"thresholdFilter":{"type":"number","format":"double"},"minLocalCandidates":{"type":"integer","format":"int32"},"minLocalConnections":{"type":"integer","format":"int32"},"identifier":{"type":"string"}},"description":""},"ZodiacEpochs":{"type":"object","properties":{"iterations":{"type":"integer","format":"int32"},"burnInPeriod":{"type":"integer","format":"int32"},"numberOfMarkovChains":{"type":"integer","format":"int32"},"identifier":{"type":"string"}},"description":""},"ZodiacNumberOfConsideredCandidatesAt300Mz":{"type":"object","properties":{"value":{"type":"integer","format":"int32"},"identifier":{"type":"string"}},"description":""},"ZodiacNumberOfConsideredCandidatesAt800Mz":{"type":"object","properties":{"value":{"type":"integer","format":"int32"},"identifier":{"type":"string"}},"description":""},"ZodiacRunInTwoSteps":{"type":"object","properties":{"value":{"type":"boolean"},"identifier":{"type":"string"}},"description":""},"JobId":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier to access the job via the API"},"command":{"type":"string","description":"Command string of the executed Task"},"progress":{"$ref":"#/components/schemas/JobProgress"},"affectedCompoundIds":{"type":"array","description":"List of compound ids that are affected by this job.\n If this job is creating compounds (e.g. data import jobs) this value will be NULL until the jobs has finished","items":{"type":"string"}}},"description":"Identifier created by the SIRIUS Nightsky API for a newly created Job.\n Object can be enriched with Job status/progress information ({@link JobProgress JobProgress}) and/or Job command information."},"JobProgress":{"type":"object","properties":{"indeterminate":{"type":"boolean","description":"Is the progress indeterminate or not"},"state":{"type":"string","description":"Current state of the Jobs in the SIRIUS internal Job scheduler\n\n         WAITING: Waiting for submission to ExecutorService (e.g. due to dependent jobs)\n         READY: Ready for submission but not yet enqueued for submission to ExecutorService.\n         QUEUED: Enqueued for submission to ExecutorService.\n         SUBMITTED: Submitted and waiting to be executed.\n         RUNNING: Job is running.\n         CANCELED: Jobs is finished due to cancellation by suer or dependent jobs.\n         FAILED: Job is finished but failed.\n         DONE: Job finished successfully.","enum":["WAITING","READY","QUEUED","SUBMITTED","RUNNING","CANCELED","FAILED","DONE"]},"currentProgress":{"type":"integer","description":"Current progress value of the job.","format":"int64"},"maxProgress":{"type":"integer","description":"Progress value to reach (might also change during execution)","format":"int64"},"message":{"type":"string","description":"Progress information and warnings."},"errorMessage":{"type":"string","description":"Error message if the job did not finish successfully failed."}},"description":"Progress information of a computation job that has already been submitted to SIRIUS.\n if  currentProgress == maxProgress job is finished and should change to state done soon.\n if a job is DONE all results can be accessed via the Project-Spaces api."},"AnnotatedPeak":{"type":"object","properties":{"mass":{"type":"number","format":"double"},"intensity":{"type":"number","format":"double"},"peakAnnotation":{"$ref":"#/components/schemas/PeakAnnotation"}},"description":""},"AnnotatedSpectrum":{"type":"object","properties":{"msLevel":{"type":"integer","description":"MS level of the measured spectrum.\n Artificial spectra with no msLevel (e.g. Simulated Isotope patterns) use 0","format":"int32"},"collisionEnergy":{"$ref":"#/components/schemas/CollisionEnergy"},"peaks":{"type":"array","items":{"$ref":"#/components/schemas/AnnotatedPeak"}}},"description":""},"CollisionEnergy":{"type":"object","properties":{"minEnergy":{"type":"number","format":"double"},"maxEnergy":{"type":"number","format":"double"},"corrected":{"type":"boolean"}},"description":""},"CompoundAnnotation":{"type":"object","properties":{"formulaAnnotation":{"$ref":"#/components/schemas/FormulaCandidate"},"structureAnnotation":{"$ref":"#/components/schemas/StructureCandidate"},"compoundClassAnnotation":{"$ref":"#/components/schemas/CompoundClasses"}},"description":"Summary of the results of a Compound. Can be added to a CompoundId.\n It is not null within a CompoundId if it was not requested und non null otherwise\n The different summary fields within this summary are null if the corresponding\n compound does not contain the represented results. The content of  non NULL\n summary field id the result was computed but is empty."},"CompoundClass":{"type":"object","properties":{"type":{"type":"string","description":"Specifies the classification ontology the CompoundClass belongs to.","enum":["ClassyFire","NPC"]},"name":{"type":"string","description":"Name of the compound class."},"description":{"type":"string","description":"Description of the compound class."},"id":{"type":"integer","description":"Unique id of the class. Might be undefined for certain classification ontologies.","format":"int32"},"probability":{"type":"number","description":"prediction probability","format":"double"}},"description":"Predicted compound class with name, probability and id if available.\n (ClassyFire and NPC). This can be seen as the set of classes a compound most likely belongs to"},"CompoundClasses":{"type":"object","properties":{"npcPathway":{"$ref":"#/components/schemas/CompoundClass"},"npcSuperclass":{"$ref":"#/components/schemas/CompoundClass"},"npcClass":{"$ref":"#/components/schemas/CompoundClass"},"classyFireMostSpecific":{"$ref":"#/components/schemas/CompoundClass"},"classyFireLevel5":{"$ref":"#/components/schemas/CompoundClass"},"classyFireClass":{"$ref":"#/components/schemas/CompoundClass"},"classyFireSubClass":{"$ref":"#/components/schemas/CompoundClass"},"classyFireSuperClass":{"$ref":"#/components/schemas/CompoundClass"}},"description":"Container class that holds the best matching compound class for different levels of each ontology for a\n certain compound/feature/predicted fingerprint."},"CompoundId":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"index":{"type":"integer","format":"int64"},"ionMass":{"type":"number","format":"double"},"ionType":{"type":"string"},"rtStartSeconds":{"type":"number","format":"double"},"rtEndSeconds":{"type":"number","format":"double"},"topAnnotation":{"$ref":"#/components/schemas/CompoundAnnotation"},"msData":{"$ref":"#/components/schemas/MsData"},"computing":{"type":"boolean"}},"description":"The CompoundId contains the ID of a compound together with some read-only information that might be displayed in\n some summary view."},"DBLink":{"type":"object","properties":{"name":{"type":"string"},"id":{"type":"string"}},"description":""},"Deviation":{"type":"object","properties":{"ppm":{"type":"number","format":"double"},"absolute":{"type":"number","format":"double"},"identifier":{"type":"string"}},"description":""},"FormulaCandidate":{"type":"object","properties":{"siriusScore":{"type":"number","format":"double"},"isotopeScore":{"type":"number","format":"double"},"treeScore":{"type":"number","format":"double"},"zodiacScore":{"type":"number","format":"double"},"molecularFormula":{"type":"string"},"adduct":{"type":"string"},"numOfexplainedPeaks":{"type":"integer","format":"int32"},"numOfexplainablePeaks":{"type":"integer","format":"int32"},"totalExplainedIntensity":{"type":"number","format":"double"},"medianMassDeviation":{"$ref":"#/components/schemas/Deviation"}},"description":""},"MsData":{"type":"object","properties":{"mergedMs1":{"$ref":"#/components/schemas/AnnotatedSpectrum"},"mergedMs2":{"$ref":"#/components/schemas/AnnotatedSpectrum"},"ms2Spectra":{"type":"array","items":{"$ref":"#/components/schemas/AnnotatedSpectrum"}},"ms1Spectra":{"type":"array","items":{"$ref":"#/components/schemas/AnnotatedSpectrum"}}},"description":"The MsData wraps all spectral input data belonging to a compound.\n\n Each compound has:\n - One merged MS/MS spectrum (optional)\n - One merged MS spectrum (optional)\n - many MS/MS spectra\n - many MS spectra\n\n Each non-merged spectrum has an index which can be used to access the spectrum.\n\n In the future we might add some additional information like chromatographic peak or something similar"},"PeakAnnotation":{"type":"object"},"StructureCandidate":{"type":"object","properties":{"structureName":{"type":"string"},"smiles":{"type":"string"},"csiScore":{"type":"number","format":"double"},"tanimotoSimilarity":{"type":"number","format":"double"},"confidenceScore":{"type":"number","format":"double"},"numOfPubMedIds":{"type":"integer","format":"int32"},"xlogP":{"type":"number","format":"double"},"inchiKey":{"type":"string"},"fpBitsSet":{"type":"array","description":"Array containing the indices of the molecular fingerprint that are available in the structure (1)\n OPTIONAL: needs to be added by parameter","items":{"type":"integer","format":"int32"}},"dbLinks":{"type":"array","description":"List of structure database links belonging to this structure candidate\n OPTIONAL: needs to be added by parameter","items":{"$ref":"#/components/schemas/DBLink"}},"pubmedIds":{"type":"array","description":"PubMed IDs belonging to this structure candidate\n OPTIONAL: needs to be added by parameter","items":{"type":"integer","format":"int32"}}},"description":""},"AccountCredentials":{"type":"object","properties":{"username":{"type":"string"},"password":{"type":"string"},"refreshToken":{"type":"string"}},"description":"Simple object to hold account credentials, e.g. to perform login operations.\n If refreshToken is given, it is usually preferred over password based authentication.\n But in the end this is up to the respective web service."},"AccountInfo":{"type":"object","properties":{"userID":{"type":"string"},"username":{"type":"string"},"userEmail":{"type":"string"},"gravatarURL":{"type":"string"},"subscriptions":{"type":"array","items":{"$ref":"#/components/schemas/Subscription"}},"activeSubscriptionId":{"type":"string"}},"description":""},"Subscription":{"type":"object","properties":{"sid":{"type":"string"},"subscriberId":{"type":"string"},"subscriberName":{"type":"string"},"expirationDate":{"type":"string","format":"date-time"},"startDate":{"type":"string","format":"date-time"},"countQueries":{"type":"boolean"},"compoundLimit":{"type":"integer","format":"int32"},"compoundHashRecordingTime":{"type":"integer","format":"int32"},"maxQueriesPerCompound":{"type":"integer","format":"int32"},"maxUserAccounts":{"type":"integer","format":"int32"},"serviceUrl":{"type":"string"},"description":{"type":"string"},"name":{"type":"string"},"tos":{"type":"string"},"pp":{"type":"string"}},"description":""},"GuiParameters":{"type":"object","properties":{"selectedTab":{"type":"string","description":"Selected Result ab.","enum":["FORMULAS","SPECTRA","TREES","PREDICTED_FINGERPRINT","STRUCTURES","STRUCTURE_ANNOTATION","COMPOUND_CLASSES"]},"cid":{"type":"string","description":"ID of Selected compound."},"fid":{"type":"string","description":"ID of Selected Formula candidate of the selected compound."},"structureCandidateInChIKey":{"type":"string","description":"InChIKey of selected structure candidate of selected formula candidate."},"bringToFront":{"type":"boolean","description":"If true bring SIRIUS GUI window to foreground."}},"description":"Parameters to \"remote control\" the SIRIUS GUI."},"FormulaResultContainer":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier of this formula candidate"},"molecularFormula":{"type":"string","description":"molecular formula of this formula candidate"},"adduct":{"type":"string","description":"Adduct of this formula candidate"},"resultOverview":{"$ref":"#/components/schemas/ResultOverview"},"candidate":{"$ref":"#/components/schemas/FormulaCandidate"}},"description":"Container for formula level results that holds a unique identifier (molecular formula + adduct).\n It can be extended/annotated with a list of results that are available for this formula candidate and their scores.\n It can further be extended/annotated with the action formula candidate results."},"ResultOverview":{"type":"object","properties":{"siriusScore":{"type":"number","description":"Sirius Score (isotope + tree score) of the formula candidate.\n If NULL result is not available","format":"double"},"zodiacScore":{"type":"number","description":"Zodiac Score of the formula candidate.\n If NULL result is not available","format":"double"},"topCSIScore":{"type":"number","description":"CSI:FingerID Score of the top ranking structure candidate of the structure database search\n performed for this formula candidate.\n If NULL structure database result is not available or the structure candidate list is empty.","format":"double"},"confidenceScore":{"type":"number","description":"Confidence Score of the\n IF NULL structure database result not available a structure candidate hit of another formula candidate is\n the top ranking structure candidate.","format":"double"},"canopusResult":{"type":"boolean","description":"True if Canopus compound class prediction results are available."}},"description":"Results that are available for a {@link FormulaResultContainer FormulaResultContainer} represented as boolean or numeric score (if available).\n NULL scores indicate that the corresponding result is not available."},"FragmentNode":{"type":"object","properties":{"id":{"type":"integer","format":"int32"},"molecularFormula":{"type":"string"},"ionType":{"type":"string"},"massDeviationDa":{"type":"number","format":"double"},"massErrorPpm":{"type":"number","format":"double"},"score":{"type":"number","format":"double"},"intensity":{"type":"number","format":"double"},"mz":{"type":"number","format":"double"}},"description":""},"FragmentationTree":{"type":"object","properties":{"fragments":{"type":"array","items":{"$ref":"#/components/schemas/FragmentNode"}},"losses":{"type":"array","items":{"$ref":"#/components/schemas/LossEdge"}},"treeScore":{"type":"number","format":"double"},"root":{"$ref":"#/components/schemas/FragmentNode"}},"description":""},"LossEdge":{"type":"object","properties":{"sourceFragment":{"$ref":"#/components/schemas/FragmentNode"},"targetFragment":{"$ref":"#/components/schemas/FragmentNode"},"molecularFormula":{"type":"string"},"score":{"type":"number","format":"double"}},"description":""},"CanopusPredictions":{"type":"object","properties":{"classyFireClasses":{"type":"array","description":"All predicted ClassyFire classes","items":{"$ref":"#/components/schemas/CompoundClass"}},"npcClasses":{"type":"array","description":"All predicted NPC classes","items":{"$ref":"#/components/schemas/CompoundClass"}}},"description":"Container class that holds the CANOPUS compound class predictions for alle predictable compound classes.\n This is the full CANOPUS result."}}}}