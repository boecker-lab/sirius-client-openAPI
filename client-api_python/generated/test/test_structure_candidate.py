# coding: utf-8

"""
    SIRIUS Nightsky API

    OpenAPI REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.The provided OpenAPI specification allows to autogenerate clients for different programming languages.

    The version of the OpenAPI document: 0.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from PySirius.models.structure_candidate import StructureCandidate

class TestStructureCandidate(unittest.TestCase):
    """StructureCandidate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StructureCandidate:
        """Test StructureCandidate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StructureCandidate`
        """
        model = StructureCandidate()
        if include_optional:
            return StructureCandidate(
                structure_name = '',
                smiles = '',
                csi_score = 1.337,
                tanimoto_similarity = 1.337,
                confidence_score = 1.337,
                num_of_pub_med_ids = 56,
                xlog_p = 1.337,
                inchi_key = '',
                fp_bits_set = [
                    56
                    ],
                db_links = [
                    PySirius.models.db_link.DBLink(
                        name = '', 
                        id = '', )
                    ],
                pubmed_ids = [
                    56
                    ]
            )
        else:
            return StructureCandidate(
        )
        """

    def testStructureCandidate(self):
        """Test StructureCandidate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
