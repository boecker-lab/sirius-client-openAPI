# coding: utf-8

"""
    SIRIUS Nightsky API

    OpenAPI REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.The provided OpenAPI specification allows to autogenerate clients for different programming languages.

    The version of the OpenAPI document: 0.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from PySirius.api.formula_results_api import FormulaResultsApi


class TestFormulaResultsApi(unittest.TestCase):
    """FormulaResultsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = FormulaResultsApi()

    def tearDown(self) -> None:
        pass

    def test_get_best_matching_canopus_predictions(self) -> None:
        """Test case for get_best_matching_canopus_predictions

        Best matching compound classes,  Set of the highest scoring compound classes CANOPUS) on each hierarchy level of  the ClassyFire and NPC ontology,
        """
        pass

    def test_get_canopus_predictions(self) -> None:
        """Test case for get_canopus_predictions

        All predicted compound classes (CANOPUS) from ClassyFire and NPC and their probabilities,
        """
        pass

    def test_get_fingerprint_prediction(self) -> None:
        """Test case for get_fingerprint_prediction

        Returns predicted fingerprint (CSI:FingerID) for the given formula result identifier  This fingerprint is used to perfom structure database search and predict compound classes.
        """
        pass

    def test_get_formula_ids(self) -> None:
        """Test case for get_formula_ids

        List of all FormulaResultContainers available for this compound/feature with minimal information.
        """
        pass

    def test_get_formula_result(self) -> None:
        """Test case for get_formula_result

        FormulaResultContainers for the given 'formulaId' with minimal information.
        """
        pass

    def test_get_frag_tree(self) -> None:
        """Test case for get_frag_tree

        Returns fragmentation tree (SIRIUS) for the given formula result identifier  This tree is used to rank formula candidates (treeScore).
        """
        pass

    def test_get_simulated_isotope_pattern(self) -> None:
        """Test case for get_simulated_isotope_pattern

        Returns simulated isotope pattern (SIRIUS) for the given formula result identifier.
        """
        pass

    def test_get_structure_candidates(self) -> None:
        """Test case for get_structure_candidates

        List of StructureCandidates the given 'formulaId' with minimal information.
        """
        pass

    def test_get_top_structure_candidate(self) -> None:
        """Test case for get_top_structure_candidate

        Best Scoring StructureCandidate over all molecular formular resutls that belong to the specified  compound/feature (compoundId).
        """
        pass


if __name__ == '__main__':
    unittest.main()
