=begin
#SIRIUS Nightsky API

#REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.

OpenAPI spec version: v0.9 on SIRIUS 5.6.0-SNAPSHOT

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.35
=end

require 'spec_helper'
require 'json'

# Unit tests for RubySirius::FormulaResultsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FormulaResultsApi' do
  before do
    # run before each test
    @instance = RubySirius::FormulaResultsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FormulaResultsApi' do
    it 'should create an instance of FormulaResultsApi' do
      expect(@instance).to be_instance_of(RubySirius::FormulaResultsApi)
    end
  end

  # unit tests for get_best_matching_canopus_predictions
  # Best matching compound classes,  Set of the highest scoring compound classes CANOPUS) on each hierarchy level of  the ClassyFire and NPC ontology,
  # Best matching compound classes,  Set of the highest scoring compound classes CANOPUS) on each hierarchy level of  the ClassyFire and NPC ontology,
  # @param project_id project-space to read from.
  # @param compound_id compound/feature the formula result belongs to.
  # @param formula_id identifier of the requested formula result
  # @param [Hash] opts the optional parameters
  # @return [CompoundClasses]
  describe 'get_best_matching_canopus_predictions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_canopus_predictions
  # All predicted compound classes (CANOPUS) from ClassyFire and NPC and their probabilities,
  # All predicted compound classes (CANOPUS) from ClassyFire and NPC and their probabilities,
  # @param project_id project-space to read from.
  # @param compound_id compound/feature the formula result belongs to.
  # @param formula_id identifier of the requested formula result
  # @param [Hash] opts the optional parameters
  # @return [CanopusPredictions]
  describe 'get_canopus_predictions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_fingerprint_prediction
  # Returns predicted fingerprint (CSI:FingerID) for the given formula result identifier  This fingerprint is used to perfom structure database search and predict compound classes.
  # Returns predicted fingerprint (CSI:FingerID) for the given formula result identifier  This fingerprint is used to perfom structure database search and predict compound classes.
  # @param project_id project-space to read from.
  # @param compound_id compound/feature the formula result belongs to.
  # @param formula_id identifier of the requested formula result
  # @param [Hash] opts the optional parameters
  # @return [Array<Float>]
  describe 'get_fingerprint_prediction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_formula_ids
  # List of all FormulaResultContainers available for this compound/feature with minimal information.
  # List of all FormulaResultContainers available for this compound/feature with minimal information.  Can be enriched with an optional results overview.
  # @param project_id project-space to read from.
  # @param compound_id compound/feature the formula result belongs to.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :result_overview add ResultOverview to the FormulaResultContainers
  # @option opts [BOOLEAN] :formula_candidate add extended formula candidate information to the FormulaResultContainers
  # @return [Array<FormulaResultContainer>]
  describe 'get_formula_ids test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_formula_result
  # FormulaResultContainers for the given &#x27;formulaId&#x27; with minimal information.
  # FormulaResultContainers for the given &#x27;formulaId&#x27; with minimal information.  Can be enriched with an optional results overview and formula candidate information.
  # @param project_id project-space to read from.
  # @param compound_id compound/feature the formula result belongs to.
  # @param formula_id identifier of the requested formula result
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :result_overview add ResultOverview to the FormulaResultContainer
  # @option opts [BOOLEAN] :formula_candidate add extended formula candidate information to the FormulaResultContainer
  # @return [FormulaResultContainer]
  describe 'get_formula_result test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_frag_tree
  # Returns fragmentation tree (SIRIUS) for the given formula result identifier  This tree is used to rank formula candidates (treeScore).
  # Returns fragmentation tree (SIRIUS) for the given formula result identifier  This tree is used to rank formula candidates (treeScore).
  # @param project_id project-space to read from.
  # @param compound_id compound/feature the formula result belongs to.
  # @param formula_id identifier of the requested formula result
  # @param [Hash] opts the optional parameters
  # @return [FragmentationTree]
  describe 'get_frag_tree test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_simulated_isotope_pattern
  # Returns simulated isotope pattern (SIRIUS) for the given formula result identifier.
  # Returns simulated isotope pattern (SIRIUS) for the given formula result identifier.  This simulated isotope pattern is used to rank formula candidates (treeScore).
  # @param project_id project-space to read from.
  # @param compound_id compound/feature the formula result belongs to.
  # @param formula_id identifier of the requested formula result
  # @param [Hash] opts the optional parameters
  # @return [AnnotatedSpectrum]
  describe 'get_simulated_isotope_pattern test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_structure_candidates
  # List of StructureCandidates the given &#x27;formulaId&#x27; with minimal information.
  # List of StructureCandidates the given &#x27;formulaId&#x27; with minimal information.  StructureCandidates can be enriched with molecular fingerprint, structure database links and pubmed ids,
  # @param project_id project-space to read from.
  # @param compound_id compound/feature the formula result belongs to.
  # @param formula_id identifier of the requested formula result
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :fingerprint add molecular fingerprint to StructureCandidates
  # @option opts [BOOLEAN] :db_links add dbLinks to StructureCandidates
  # @option opts [BOOLEAN] :pub_med_ids add PubMedIds (citation count) to StructureCandidates
  # @option opts [Integer] :top_k retrieve only the top k StructureCandidates
  # @return [Array<StructureCandidate>]
  describe 'get_structure_candidates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_top_structure_candidate
  # Best Scoring StructureCandidate over all molecular formular resutls that belong to the specified  compound/feature (compoundId).
  # Best Scoring StructureCandidate over all molecular formular resutls that belong to the specified  compound/feature (compoundId).
  # @param project_id project-space to read from.
  # @param compound_id compound/feature the formula result belongs to.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :fingerprint add molecular fingerprint to StructureCandidates
  # @option opts [BOOLEAN] :db_links add dbLinks to StructureCandidates
  # @option opts [BOOLEAN] :pub_med_ids add PubMedIds (citation count) to StructureCandidates
  # @return [StructureCandidate]
  describe 'get_top_structure_candidate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
