=begin
#SIRIUS Nightsky API

#REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.

OpenAPI spec version: v0.9 on SIRIUS 5.6.0-SNAPSHOT

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.35
=end

require 'spec_helper'
require 'json'

# Unit tests for RubySirius::GraphicalUserInterfaceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GraphicalUserInterfaceApi' do
  before do
    # run before each test
    @instance = RubySirius::GraphicalUserInterfaceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GraphicalUserInterfaceApi' do
    it 'should create an instance of GraphicalUserInterfaceApi' do
      expect(@instance).to be_instance_of(RubySirius::GraphicalUserInterfaceApi)
    end
  end

  # unit tests for apply_to_gui
  # Apply given changes to the running GUI instance.
  # Apply given changes to the running GUI instance.
  # @param body parameters that should be applied.
  # @param project_id of project-space the GUI instance is connected to.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'apply_to_gui test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for close_gui
  # Close GUI instance of given project-space if available.
  # Close GUI instance of given project-space if available.
  # @param project_id if project-space the GUI instance is connected to.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'close_gui test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for open_gui
  # Open GUI instance on specified project-space and bring the GUI window to foreground.
  # Open GUI instance on specified project-space and bring the GUI window to foreground.
  # @param project_id of project-space the GUI instance will connect to.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :read_only open in read-only mode.
  # @return [nil]
  describe 'open_gui test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
