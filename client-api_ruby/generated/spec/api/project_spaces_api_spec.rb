=begin
#SIRIUS Nightsky API

#REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.

OpenAPI spec version: v0.9 on SIRIUS 5.6.0-SNAPSHOT

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.35
=end

require 'spec_helper'
require 'json'

# Unit tests for RubySirius::ProjectSpacesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProjectSpacesApi' do
  before do
    # run before each test
    @instance = RubySirius::ProjectSpacesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectSpacesApi' do
    it 'should create an instance of ProjectSpacesApi' do
      expect(@instance).to be_instance_of(RubySirius::ProjectSpacesApi)
    end
  end

  # unit tests for close_project_space
  # Close project-space and remove it from application.
  # Close project-space and remove it from application. Project-space will NOT be deleted from disk.
  # @param project_id unique name/identifier of the  project-space to be closed.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'close_project_space test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_project_space
  # Create and open a new project-space at given location and make it accessible via the given projectId.
  # Create and open a new project-space at given location and make it accessible via the given projectId.
  # @param project_id unique name/identifier that shall be used to access the newly created project-space.
  # @param path_to_project 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :path_to_source_project 
  # @option opts [BOOLEAN] :await_import 
  # @return [ProjectSpaceId]
  describe 'create_project_space test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_space
  # Get project space info by its projectId.
  # Get project space info by its projectId.
  # @param project_id unique name/identifier tof the project-space to be accessed.
  # @param [Hash] opts the optional parameters
  # @return [ProjectSpaceId]
  describe 'get_project_space test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project_spaces
  # List all opened project spaces.
  # List all opened project spaces.
  # @param [Hash] opts the optional parameters
  # @return [Array<ProjectSpaceId>]
  describe 'get_project_spaces test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for open_project_space
  # Open an existing project-space and make it accessible via the given projectId.
  # Open an existing project-space and make it accessible via the given projectId.
  # @param project_id unique name/identifier that shall be used to access the opened project-space.
  # @param path_to_project 
  # @param [Hash] opts the optional parameters
  # @return [ProjectSpaceId]
  describe 'open_project_space test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
